{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","selectedTabId","visibleTab","onTabSelected","selectTheTab","some","tab","id","className","map","cn","href","onClick","title","find","content","App","useState","setSelectedTabId","recievedTabs","preparedTabs","ReactDOM","render","document","getElementById"],"mappings":"qOAEaA,EAAO,SAAC,GAKf,IAJFC,EAIC,EAJDA,KAEAC,GAEC,EAHDC,WAGC,EAFDD,eACAE,EACC,EADDA,cAEEC,EAAeH,EAMnB,OAJKD,EAAKK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,OAC/BA,EAAeJ,EAAK,GAAGO,IAIvB,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAAAH,GAAG,OACX,oBAEEE,UAAWE,IAAG,CAAE,YAAaJ,EAAIC,KAAOH,IACxC,UAAQ,MAHV,SAKE,mBACEO,KAAI,WAAML,EAAIC,IACdK,QAAS,WACHR,IAAiBE,EAAIC,IACvBJ,EAAcG,IAGlB,UAAQ,UAPV,SASGA,EAAIO,SAbFP,EAAIC,WAoBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGR,EAAKc,MAAK,SAAAR,GAAG,OAAIA,EAAIC,KAAOH,KAAcW,cCnCtCf,EAAO,CAClB,CAAEO,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,eACxC,CAAER,GAAI,QAASM,MAAO,QAASE,QAAS,gBAanC,IAAMC,EAAM,WACjB,MAA0CC,mBAASjB,EAAK,GAAGO,IAA3D,mBAAON,EAAP,KAAsBiB,EAAtB,KACMhB,EAZR,SAAsBiB,EAAtB,GAAwD,IAAlBlB,EAAiB,EAAjBA,cAChCmB,EAAY,YAAOD,GAMvB,OAJIlB,IACFmB,EAAeA,EAAaN,MAAK,SAAAR,GAAG,OAAIA,EAAIC,KAAON,MAG9CmB,EAKYhB,CAAaJ,EAAM,CAAEC,kBAMxC,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBN,EAAWW,SAGjC,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeA,EACfE,cAbgB,SAACG,GACrBY,EAAiBZ,EAAIC,WCxBzBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3090c40a.chunk.js","sourcesContent":["import cn from 'classnames';\n\nexport const Tabs = (\n  { tabs,\n    visibleTab,\n    selectedTabId,\n    onTabSelected },\n) => {\n  let selectTheTab = selectedTabId;\n\n  if (!tabs.some(tab => tab.id === selectTheTab)) {\n    selectTheTab = tabs[0].id;\n  }\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={cn({ 'is-active': tab.id === selectTheTab })}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                onClick={() => {\n                  if (selectTheTab !== tab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n                data-cy=\"TabLink\"\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === selectTheTab).content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nfunction selectTheTab(recievedTabs, { selectedTabId }) {\n  let preparedTabs = [...recievedTabs];\n\n  if (selectedTabId) {\n    preparedTabs = preparedTabs.find(tab => tab.id === selectedTabId);\n  }\n\n  return preparedTabs;\n}\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const visibleTab = selectTheTab(tabs, { selectedTabId });\n\n  const onTabSelected = (tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${visibleTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}